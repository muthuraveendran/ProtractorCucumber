"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CucumberFormat = void 0;
const tiny_types_1 = require("tiny-types");
/**
 * @desc
 *  Represents a Cucumber.js formatter
 *
 * @see https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#built-in-formatters
 */
class CucumberFormat {
    /**
     * @param {string} value
     *  Cucumber format expression, like `pretty` or `json:out.json`
     */
    constructor(value) {
        this.value = value;
        [this.formatter, this.output] = CucumberFormat.split(tiny_types_1.ensure('format', value, tiny_types_1.isString(), tiny_types_1.isNotBlank()));
    }
    /**
     * @see https://github.com/cucumber/cucumber-js/blob/master/src/cli/option_splitter.ts
     * @param {string} format
     * @private {string[]}
     */
    static split(format) {
        const parts = format.split(/([^A-Z]):(?!\\)/);
        const result = parts.reduce((memo, part, i) => {
            if (partNeedsRecombined(i)) {
                memo.push(parts.slice(i, i + 2).join(''));
            }
            return memo;
        }, []);
        if (result.length === 1) {
            result.push('');
        }
        return result;
    }
}
exports.CucumberFormat = CucumberFormat;
/**]
 * @private
 */
function partNeedsRecombined(i) {
    return i % 2 === 0;
}
//# sourceMappingURL=CucumberFormat.js.map