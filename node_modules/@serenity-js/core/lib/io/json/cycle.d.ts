/**
 * @desc
 *  Converts a JavaScript value to a JavaScript Object Notation (JSON) string.
 *  Supports objects with cyclic references.
 *
 * @param {any} value
 *  A JavaScript value, usually an object or array, to be converted.
 *
 * @param {function(this: any, key: string, value: any): any} [replacer]
 *  A function that transforms the results.
 *
 * @param {string | number} [space]
 *  Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.
 */
export declare function stringify(value: unknown, replacer?: (this: any, key: string, value: any) => any, space?: string | number): string;
/**
 * @desc
 *  Converts a JavaScript Object Notation (JSON) string into an object.
 *  Supports objects with cyclic references.
 *
 * @param text A valid JSON string.
 * @param reviver A function that transforms the results. This function is called for each member of the object.
 *   If a member contains nested objects, the nested objects are transformed before the parent object is.
 */
export declare function parse(text: string, reviver?: (this: any, key: string, value: any) => any): any;
