import { Activity } from './Activity';
import { AnswersQuestions, CollectsArtifacts, UsesAbilities } from './actor';
/**
 * @desc
 *  Directly exercises the {@link Actor}'s {@link Ability} to interact
 *  with the System Under Test.
 *
 * @implements {Activity}
 * @see {@link Ability}
 * @see {@link Actor}
 */
export declare abstract class Interaction implements Activity {
    static where(description: string, interaction: (actor: UsesAbilities & AnswersQuestions & CollectsArtifacts) => PromiseLike<void> | void): Interaction;
    /**
     * @desc
     *  Makes the provided {@link Actor}
     *  perform this {@link Interaction}.
     *
     * @param {UsesAbilities & AnswersQuestions} actor
     * @returns {Promise<void>}
     *
     * @see {@link Actor}
     * @see {@link UsesAbilities}
     * @see {@link AnswersQuestions}
     */
    abstract performAs(actor: UsesAbilities & AnswersQuestions): PromiseLike<void>;
}
