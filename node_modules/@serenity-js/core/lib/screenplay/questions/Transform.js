"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Transform = void 0;
const Question_1 = require("../Question");
/**
 * @experimental
 */
class Transform extends Question_1.Question {
    constructor(questions, transformation, description = `a transformed answer`) {
        super(description);
        this.questions = questions;
        this.transformation = transformation;
        this.description = description;
    }
    static the(questions, transformation) {
        return new Transform([].concat(questions), transformation);
    }
    /**
     * @deprecated
     *  Please use {@link Transform#describedAs} instead
     *
     * @desc
     *  Overrides the default {@link Transform#toString} representation of this object.
     *
     * @param {string} description
     * @returns {Transform<Answer_Type, Output_Type>}
     */
    as(description) {
        return this.describedAs(description);
    }
    /**
     * Changes the description of this question's subject.
     *
     * @param subject
     */
    describedAs(subject) {
        this.subject = subject;
        return this;
    }
    answeredBy(actor) {
        return Promise.all(this.questions.map(question => actor.answer(question)))
            .then(answers => this.transformation(...answers));
    }
}
exports.Transform = Transform;
//# sourceMappingURL=Transform.js.map