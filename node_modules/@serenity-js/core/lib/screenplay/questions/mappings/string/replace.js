"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.replace = void 0;
/* eslint-disable unicorn/consistent-function-scoping */
const tiny_types_1 = require("tiny-types");
/**
 * @desc
 *  Returns a new string with some or all matches of a pattern replaced by a replacement.
 *  The pattern can be a string or a RegExp, and the replacement can be a string or a function to be called for each match.
 *  If pattern is a string, only the first occurrence will be replaced.
 *
 * @param {Answerable<string | RegExp>} pattern
 *
 * @param {Answerable<string|function>} replacement
 *
 * @returns {MappingFunction<string, string>}
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace
 */
function replace(pattern, replacement) {
    return (actor) => (value) => {
        tiny_types_1.ensure('The value to be mapped', value, tiny_types_1.isDefined(), tiny_types_1.isString());
        return Promise.all([
            actor.answer(pattern),
            actor.answer(replacement),
        ]).then(([p, r]) => value.replace(p, r));
    };
}
exports.replace = replace;
//# sourceMappingURL=replace.js.map