import { Answerable } from '../../Answerable';
import { Question } from '../../Question';
import { MetaQuestion } from '../MetaQuestion';
import { PropertyPathKey } from './PropertyPathKey';
/**
 * @package
 */
export declare type WithPropertiesAsMetaQuestions<Original_Type, Nested_Type = Original_Type> = {
    [Key in keyof Nested_Type]: Nested_Type[Key] extends object ? Question<Promise<Nested_Type[Key]>> & MetaQuestion<Answerable<Original_Type>, Promise<Nested_Type[Key]>> & WithPropertiesAsMetaQuestions<Original_Type, Nested_Type[Key]> : Question<Promise<Nested_Type[Key]>> & MetaQuestion<Answerable<Original_Type>, Promise<Nested_Type[Key]>>;
};
/**
 * @package
 */
export declare function createMetaQuestionProxy<Original_Type extends object>(path?: PropertyPathKey[]): WithPropertiesAsMetaQuestions<Original_Type>;
