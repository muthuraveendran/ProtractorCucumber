"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TrackedActivity = void 0;
const events_1 = require("../../events");
const model_1 = require("../../model");
const Interaction_1 = require("../Interaction");
const ActivityDescriber_1 = require("./ActivityDescriber");
const OutcomeMatcher_1 = require("./OutcomeMatcher");
/** @package */
class TrackedActivity {
    constructor(activity, stage) {
        this.activity = activity;
        this.stage = stage;
    }
    performAs(actor) {
        const sceneId = this.stage.currentSceneId(), activityId = this.stage.assignNewActivityId(), details = new model_1.ActivityDetails(TrackedActivity.describer.describe(this.activity, actor));
        const [activityStarts, activityFinished] = this.activity instanceof Interaction_1.Interaction
            ? [events_1.InteractionStarts, events_1.InteractionFinished]
            : [events_1.TaskStarts, events_1.TaskFinished];
        return Promise.resolve()
            .then(() => this.stage.announce(new activityStarts(sceneId, activityId, details, this.stage.currentTime())))
            .then(() => this.activity.performAs(actor))
            .then(() => {
            const outcome = new model_1.ExecutionSuccessful();
            this.stage.announce(new activityFinished(sceneId, activityId, details, outcome, this.stage.currentTime()));
        })
            .catch(error => {
            const outcome = TrackedActivity.outcomes.outcomeFor(error);
            this.stage.announce(new activityFinished(sceneId, activityId, details, outcome, this.stage.currentTime()));
            throw error;
        });
    }
    toString() {
        return this.activity.toString();
    }
}
exports.TrackedActivity = TrackedActivity;
TrackedActivity.describer = new ActivityDescriber_1.ActivityDescriber();
TrackedActivity.outcomes = new OutcomeMatcher_1.OutcomeMatcher();
//# sourceMappingURL=TrackedActivity.js.map