import { Interaction } from '@serenity-js/core';
/**
 * @desc
 *  Instructs the {@link @serenity-js/core/lib/screenplay/actor~Actor} to
 *  close browser tabs or windows.
 *
 * @example <caption>Closing a browser tab or window</caption>
 *  import { actorCalled } from '@serenity-js/core';
 *  import { BrowseTheWeb, Click, Close, Switch } from '@serenity-js/protractor';
 *  import { protractor } from 'protractor';
 *
 *  actorCalled('Caleb')
 *      .whoCan(BrowseTheWeb.using(protractor.browser))
 *      .attemptsTo(
 *          Click.on(someLinkThatOpensANewWindow),
 *
 *          Switch.toNewWindow().and(
 *              // perform activities in the context of the new window
 *              Close.currentWindow(),
 *          ),
 *      );
 *
 * @example <caption>Closing any new windows after a Jasmine test</caption>
 *  import 'jasmine';
 *
 *  import { actorInTheSpotlight } from '@serenity-js/core';
 *  import { Close } from '@serenity-js/protractor';
 *
 *  after(() =>
 *      actorInTheSpotlight().attemptsTo(
 *          Close.anyNewWindows(),
 *      ));
 *
 * @example <caption>Closing any new windows after a Mocha test</caption>
 *  import 'mocha';
 *
 *  import { actorInTheSpotlight } from '@serenity-js/core';
 *  import { Close } from '@serenity-js/protractor';
 *
 *  after(() =>
 *      actorInTheSpotlight().attemptsTo(
 *          Close.anyNewWindows(),
 *      ));
 *
 * @example <caption>Closing any new windows after a    Cucumber scenario</caption>
 *  import { actorInTheSpotlight } from '@serenity-js/core';
 *  import { Close } from '@serenity-js/protractor';
 *  import { After } from 'cucumber';
 *
 *  After(() =>
 *      actorInTheSpotlight().attemptsTo(
 *          Close.anyNewWindows(),
 *      ));
 *
 * @see {@link Switch}
 */
export declare class Close {
    /**
     * @desc
     *  Closes any windows other than the original one that
     *  the {@link @serenity-js/core/lib/screenplay/actor~Actor}
     *  has {@link Navigate}d to.
     *
     *  When the windows are closed, it switches the context
     *  back to the original window.
     *
     * @static
     * @returns {@link @serenity-js/core/lib/screenplay~Interaction}
     *
     * @see {@link Switch}
     */
    static anyNewWindows(): Interaction;
    /**
     * @desc
     *  Closes the currently focused browser window.
     *
     *  **Please note** that this interaction should be used to close
     *  pop-up windows or any new windows/tabs opened during the test
     *  rather than the _main_ window, which is managed by Protractor.
     *
     *  See tests for usage examples.
     *
     * @static
     * @returns {@link @serenity-js/core/lib/screenplay~Interaction}
     *
     * @see {@link Switch}
     */
    static currentWindow(): Interaction;
}
