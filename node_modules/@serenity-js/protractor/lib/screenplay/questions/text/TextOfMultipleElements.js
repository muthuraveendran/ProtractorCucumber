"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextOfMultipleElements = void 0;
const core_1 = require("@serenity-js/core");
const withAnswerOf_1 = require("../../withAnswerOf");
const targets_1 = require("../targets");
/**
 * @package
 */
class TextOfMultipleElements extends core_1.Question {
    constructor(target) {
        super(`the text of ${target}`);
        this.target = target;
    }
    of(parent) {
        return new TextOfMultipleElements(new targets_1.TargetNestedElements(parent, this.target));
    }
    /**
     * @desc
     *  Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}
     *  answer this {@link @serenity-js/core/lib/screenplay~Question}.
     *
     * @param {AnswersQuestions & UsesAbilities} actor
     * @returns {Promise<void>}
     *
     * @see {@link @serenity-js/core/lib/screenplay/actor~Actor}
     * @see {@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}
     * @see {@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}
     */
    answeredBy(actor) {
        // protractor ignores type definitions for the ElementArrayFinder, hence the `any`
        // https://github.com/angular/protractor/blob/c3978ec166760ac07db01e700c4aaaa19d9b5c38/lib/element.ts#L92
        return withAnswerOf_1.withAnswerOf(actor, this.target, eaf => Promise.resolve(eaf.getText()));
    }
}
exports.TextOfMultipleElements = TextOfMultipleElements;
//# sourceMappingURL=TextOfMultipleElements.js.map