import { Answerable, AnswersQuestions, Question, UsesAbilities } from '@serenity-js/core';
import { ElementFinder } from 'protractor';
export declare class Attribute extends Question<Promise<string>> {
    private readonly target;
    private readonly name;
    /**
     * @param {Question<ElementFinder> | ElementFinder} target
     * @returns {AttributeBuilder}
     */
    static of(target: Question<ElementFinder> | ElementFinder): AttributeBuilder;
    constructor(target: Question<ElementFinder> | ElementFinder, name: Answerable<string>);
    /**
     * @desc
     *  Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}
     *  answer this {@link @serenity-js/core/lib/screenplay~Question}.
     *
     * @param {AnswersQuestions & UsesAbilities} actor
     * @returns {Promise<void>}
     *
     * @see {@link @serenity-js/core/lib/screenplay/actor~Actor}
     * @see {@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}
     * @see {@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}
     */
    answeredBy(actor: AnswersQuestions & UsesAbilities): Promise<string>;
}
interface AttributeBuilder {
    called(name: Answerable<string>): Attribute;
}
export {};
